#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer names
#define L_BASE     0
#define L_NAV      1
#define L_NUMPAD   2
#define L_SYMBOLS  3
#define L_FUNCTION 4
#define L_BT_CTRL  5


&lt {
    tapping-term-ms = <250>;
    quick-tap-ms = <250>;
};


/ {
    macros {
        enl: enable_num_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp KP_NUM>
                , <&macro_press &mo L_NUMPAD>
                , <&macro_pause_for_release>
                , <&macro_release &mo L_NUMPAD>
                , <&macro_tap &kp KP_NUM>
                ;
        };

        stf: super_tab_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LA(TAB) &sk LALT>
                ;
        };

        stb: super_tab_bkw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LA(LS(TAB)) &sk LALT>
                ;

        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        querty_layer {
// ------------------------------------------------------------------------------------------------------------------------------------
// |   `     |    Q    |    W    |    E    |    R    |    T    |          |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   TAB   |    A    |    S    |    D    |    F    |    G    |          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |  SCAPS  |    Z    |    X    |    C    |    V    |    B    |          |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
//                               |   TAB   |   SPC   |   DEL   |          |  BSPC   |   RET   |  PSCRN  |
            bindings = <
    &kp GRAVE   &kp Q       &kp W       &kp E             &kp R            &kp T                         &kp Y       &kp U              &kp I               &kp O       &kp P         &kp BSLH
    &kp ESC     &hm LGUI A  &hm LALT S  &hm LSHIFT D      &hm LCTRL F      &hm RALT G                    &hm RALT H  &hm RCTRL J        &hm RSHIFT K        &hm LALT L  &hm LGUI SEMI &kp SQT
    &caps_word  &kp Z       &kp X       &kp C             &kp V            &kp B                         &kp N       &kp M              &kp COMMA           &kp DOT     &kp FSLH      &kp RCTRL
                                        &lt L_NUMPAD TAB  &lt L_NAV SPACE  &lt L_FUNCTION DEL            &kp BSPC    &lt L_SYMBOLS RET  &lt L_BT_CTRL PSCRN
            >;
        };

        nav_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |        |       |       |       |       |     |      |    *     |    7     |     8    |     9     |    -     |    /   |
// |        |       |       |       |       |     |      |    0     |    4     |     5    |     6     |    .     |    ^   |
// |        |       |       |       |       |     |      |    +     |    1     |     2    |     3     |    ,     |    =   |
//                          |       |       |     |      |          |          |          |
            bindings = <
    &trans  &trans  &trans  &kp LC(LS(TAB))  &kp LC(TAB)  &trans        &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &kp F12
    &trans  &trans  &trans  &stb             &stf         &trans        &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &kp F11
    &trans  &trans  &trans  &trans           &trans       &trans        &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &kp F10
                            &trans           &trans       &trans        &trans    &trans     &trans
            >;
        };

        numpad_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |        |       |       |       |       |     |      |    *     |    7     |     8    |     9     |    -     |    /   |
// |        |       |       |       |       |     |      |    0     |    4     |     5    |     6     |    .     |    ^   |
// |        |       |       |       |       |     |      |    +     |    1     |     2    |     3     |    ,     |    =   |
//                          |       |       |     |      |          |          |          |
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans        &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp MINUS  &kp SLASH
    &trans  &trans  &trans  &trans  &trans  &trans        &kp N0     &kp N4  &kp N5  &kp N6  &kp DOT    &kp CARET
    &trans  &trans  &trans  &trans  &trans  &trans        &kp PLUS   &kp N1  &kp N2  &kp N3  &kp COMMA  &kp EQUAL
                            &trans  &trans  &trans        &trans     &trans     &trans
            >;
        };

        symbol_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |        |       |       |       |       |     |      |          |        |       |       |         |         |
// |        |       |       |       |       |     |      |          |        |       |       |         |         |
// |        |       |       |       |       |     |      |          |        |       |       |         |         |
//                          |       |       |     |      |          |        |       |
            bindings = <
    &trans  &kp SQT    &kp LT     &kp GT    &kp DQT    &kp GRAVE     &kp AMPS   &kp LBKT  &kp RBKT  &kp UNDER   &kp PERCENT   &trans
    &trans  &kp EXCL   &kp MINUS  &kp PLUS  &kp EQUAL  &kp HASH      &kp PIPE   &kp LPAR  &kp RPAR  &kp COLON   &kp SEMI      &kp DQT
    &trans  &kp CARET  &kp SLASH  &kp STAR  &kp FSLH   &kp AT        &kp TILDE  &kp LBRC  &kp RBRC  &kp DOLLAR  &kp QUESTION  &trans
                                  &trans    &trans     &trans        &trans     &trans      &trans
            >;
        };

        function_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |        |       |       |       |       |     |      |          |        |       |       |         |         |
// |        |       |       |       |       |     |      |          |        |       |       |         |         |
// |        |       |       |       |       |     |      |          |        |       |       |         |         |
//                          |       |       |     |      |          |        |       |
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
    &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
    &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                            &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };

        media_bt_ctrl_layer {
// --------------------------------------------------------------------------------------------------------------------------------
//        |        |       |        |          |        |          |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |  BT CLR ALL  |
//        |  VDWN  |  VUP  |  PREV  |  PL/PAU  |  NEXT  |          |       |       |       |       |       |    BT CLR    |
//        |        |       |        |          |        |          |       |       |       |       |       |              |
//                         |        |          |        |          |       |       |       |
            bindings = <
    &none   &none         &none         &none       &none     &none            &none         &none         &none         &none         &none         &bt BT_CLR_ALL
    &none   &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_PP  &kp C_NEXT       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
    &none   &none         &none         &none       &none     &none            &none         &none         &none         &none         &none         &none
                                        &none       &none     &none            &none         &none         &none
            >;
        };

//         null_layer {
// // --------------------------------------------------------------------------------------------------------------------------------
// // |        |       |       |       |       |     |      |          |        |       |       |         |         |
// // |        |       |       |       |       |     |      |          |        |       |       |         |         |
// // |        |       |       |       |       |     |      |          |        |       |       |         |         |
// //                          |       |       |     |      |          |        |       |
//             bindings = <
//     &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
//     &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
//     &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
//                             &trans  &trans  &trans        &trans  &trans  &trans
//             >;
//         };

//         opaque_layer {
// // --------------------------------------------------------------------------------------------------------------------------------
// // |        |       |       |       |       |     |      |          |        |       |       |         |         |
// // |        |       |       |       |       |     |      |          |        |       |       |         |         |
// // |        |       |       |       |       |     |      |          |        |       |       |         |         |
// //                          |       |       |     |      |          |        |       |
//             bindings = <
//     &none  &none  &none  &none  &none  &none        &none  &none  &none  &none  &none  &none
//     &none  &none  &none  &none  &none  &none        &none  &none  &none  &none  &none  &none
//     &none  &none  &none  &none  &none  &none        &none  &none  &none  &none  &none  &none
//                          &none  &none  &none        &none  &none  &none
//             >;
//         };

    };
};